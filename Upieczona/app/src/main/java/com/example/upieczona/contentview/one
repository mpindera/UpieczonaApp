if (up.size >= recipeTitleInstruction.size) {
    for ((index, recipeContent) in up.withIndex()) {
      if (index < recipeTitleInstruction.size) {
        val title = recipeTitleInstruction[index]

        Text(
          modifier = Modifier.padding(start = 8.dp, end = 8.dp),
          fontFamily = MaterialTheme.typography.headlineSmall.fontFamily,
          text = title,
          fontSize = 20.sp,
          textAlign = TextAlign.Start,
          fontWeight = FontWeight.Bold
        )
      }

      Column(modifier = Modifier.padding(4.dp)) {
        Text(
          modifier = Modifier.padding(start = 5.dp),
          fontSize = 14.sp,
          textAlign = TextAlign.Start,
          text = recipeContent,
        )
      }
    }
  } else {
    for ((index, recipeContent) in up.drop(1).withIndex()) {
      if (index < recipeTitleInstruction.size) {
        val title = recipeTitleInstruction[index]

        Text(
          modifier = Modifier.padding(start = 8.dp, end = 8.dp),
          fontFamily = MaterialTheme.typography.headlineSmall.fontFamily,
          text = title,
          fontSize = 20.sp,
          textAlign = TextAlign.Start,
          fontWeight = FontWeight.Bold
        )
      }

      Column(modifier = Modifier.padding(4.dp)) {
        Text(
          modifier = Modifier.padding(start = 5.dp),
          fontSize = 14.sp,
          textAlign = TextAlign.Start,
          text = recipeContent,
        )
      }
    }
  }





  val recipeTitleInstruction = upieczonaViewModel.formatInstructionsTitle(postDetails.content.rendered)
    val up = upieczonaViewModel.fetchRecipe1(postDetails.content.rendered)

    for ((index, recipeContent) in up.drop(1).withIndex()) {
      if (index < recipeTitleInstruction.size) {
        val title = recipeTitleInstruction[index]

        Text(
          modifier = Modifier.padding(start = 8.dp, end = 8.dp),
          fontFamily = MaterialTheme.typography.headlineSmall.fontFamily,
          text = title,
          fontSize = 20.sp,
          textAlign = TextAlign.Start,
          fontWeight = FontWeight.Bold
        )
      }

      Column(modifier = Modifier.padding(4.dp)) {
        Text(
          modifier = Modifier.padding(start = 5.dp),
          fontSize = 14.sp,
          textAlign = TextAlign.Start,
          text = recipeContent,
        )
      }
    }
